{"remainingRequest":"/Users/tomas/Desktop/hello-vue/node_modules/babel-loader/lib/index.js!/Users/tomas/Desktop/hello-vue/node_modules/eslint-loader/index.js??ref--13-0!/Users/tomas/Desktop/hello-vue/src/store/modules/auth/actions.js","dependencies":[{"path":"/Users/tomas/Desktop/hello-vue/src/store/modules/auth/actions.js","mtime":1618499032812},{"path":"/Users/tomas/Desktop/hello-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tomas/Desktop/hello-vue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tomas/Desktop/hello-vue/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/tomas/Desktop/hello-vue/src/store/modules/auth/actions.js"],"names":["cred","login","context","payload","url","dev","url_login","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","enctype","body","JSON","stringify","email","password","response","json","responseData","ok","code","Error","message","status","commit","token","userId","expiresIn","localStorage","setItem","register","_","console","log","name","surname","tryLogin","getItem","logout","removeItem","expired"],"mappings":"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","sourcesContent":["import cred from '../../cred.js'\n\n\nexport default {\n    /**Login method\n     * \n     * @param {*} context \n     * @param {*} payload \n     */\n    async login(context, payload) {\n\n        let url = cred.dev.url_login\n\n        const response = await fetch(url, {\n            method: 'POST',\n            mode: 'cors', // no-cors, *cors, same-origin\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n            credentials: 'same-origin', // include, *same-origin, omit\n            headers: {\n                'Content-Type': 'application/json',\n\n            },\n            redirect: 'follow', // manual, *follow, error\n            referrerPolicy: 'no-referrer',\n            enctype: 'mutipart/form-data',\n            body: JSON.stringify({\n                email: payload.email,\n                password: payload.password\n            })\n        });\n        const responseData = await response.json()\n\n        if (!response.ok) {\n            if (responseData.code === 401) {\n                throw new Error(responseData.message)\n            } else\n                throw new Error(\"Request failed with error code: \" + response.status)\n\n        }\n        // qui tutto ok \n        context.commit('setUser', {\n            token: responseData.token,\n            userId: responseData.email,\n            expiresIn: responseData.expiresIn\n        })\n\n        localStorage.setItem('token', responseData.token)\n        localStorage.setItem('userId', responseData.email)\n        localStorage.setItem('expiresIn', responseData.expiresIn)\n\n    },\n\n\n    /**\n     * register method\n     * @param {*} _ \n     * @param {*} payload \n     */\n    async register(_, payload) {\n        let url = 'http://localhost:3000/register'\n        console.log(payload)\n        const response = await fetch(url, {\n            method: 'POST',\n            mode: 'cors', // no-cors, *cors, same-origin\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n            credentials: 'same-origin', // include, *same-origin, omit\n            headers: {\n                //      'Content-Type': 'application/json',\n                'Content-Type': 'application/x-www-form-urlencoded',\n\n            },\n            redirect: 'follow', // manual, *follow, error\n            referrerPolicy: 'no-referrer',\n            enctype: 'mutipart/form-data',\n            body: JSON.stringify({\n                name: payload.name,\n                surname: payload.surname,\n                email: payload.email,\n                password: payload.password\n            })\n        });\n        const responseData = await response.json()\n\n        if (!response.ok) {\n            if (responseData.code === 409) {\n                throw new Error(responseData.message)\n            } else\n                throw new Error(\"Request failed with error code: \" + response.status)\n\n        }\n\n\n    },\n\n    /**\n     * Get calls in every page riload\n     * @param {*} _ \n     * @param {*} payload \n     */\n    async tryLogin(context) {\n        const token = localStorage.getItem('token')\n        const userId = localStorage.getItem('userId')\n        const expiresIn = localStorage.getItem('expiresIn')\n\n        if (token && userId) {\n            context.commit('setUser', {\n                token: token,\n                userId: userId,\n                expiresIn: expiresIn\n            })\n        }\n    },\n\n    /**\n     * Logs the user out\n     * @param {*} context \n     */\n    logout(context) {\n\n        localStorage.removeItem('token')\n        localStorage.removeItem('userId')\n        localStorage.removeItem('expiresIn')\n\n        context.commit('setUser', {\n            token: null,\n            expired: null,\n            userId: null\n\n        })\n\n    }\n\n\n\n}"]}]}