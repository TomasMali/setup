{"remainingRequest":"/Users/tomas/Desktop/hello-vue/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/tomas/Desktop/hello-vue/src/pages/auth/ChangePassword.vue?vue&type=style&index=0&id=7b664580&scoped=true&lang=css","dependencies":[{"path":"/Users/tomas/Desktop/hello-vue/src/pages/auth/ChangePassword.vue","mtime":1618738266614},{"path":"/Users/tomas/Desktop/hello-vue/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tomas/Desktop/hello-vue/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1616796459000},{"path":"/Users/tomas/Desktop/hello-vue/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/tomas/Desktop/hello-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tomas/Desktop/hello-vue/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5lcnJvciB7CiAgYm9yZGVyLWNvbG9yOiByZWQ7Cn0K"},{"version":3,"sources":["/Users/tomas/Desktop/hello-vue/src/pages/auth/ChangePassword.vue"],"names":[],"mappings":";AAiIA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACnB","file":"/Users/tomas/Desktop/hello-vue/src/pages/auth/ChangePassword.vue","sourceRoot":"","sourcesContent":["\n\n<template>\n  <div>\n    <base-dialog\n      :show=\"!!error\"\n      title=\"An error occurred!\"\n      @close=\"handleError\"\n      >{{ error }}</base-dialog\n    >\n\n    <base-dialog :show=\"isLoading\" fixed title=\"Sending data...\">\n      <base-spinner></base-spinner>\n    </base-dialog>\n\n    <div class=\"w3-row\">\n      <div class=\"w3-third w3-container\"></div>\n      <div class=\"w3-third w3-container\">\n        <div class=\"w3-margin w3-card-4\">\n          <div class=\"w3-container w3-blue w3-center\">\n            <h3>Change Password</h3>\n          </div>\n\n          <form class=\"w3-container\" @submit.prevent=\"submitForm\">\n            <p>\n              <label for=\"email\">Enter your new password</label>\n              <input\n                class=\"w3-input\"\n                type=\"password\"\n                id=\"password\"\n                v-model.trim=\"password\"\n                @blur=\"validatePassword\"\n                :class=\"{ error: !isValid }\"\n              />\n            </p>\n            <p>\n              <label for=\"email\">Repeat your password</label>\n              <input\n                class=\"w3-input\"\n                type=\"password\"\n                id=\"passwordConfirm\"\n                v-model.trim=\"passwordConfirm\"\n                @blur=\"validatePasswordConfirm\"\n                :class=\"{ error: !isValidConfirm }\"\n              />\n            </p>\n\n            <p v-if=\"!isValid\" class=\"w3-text-red\">\n              Please enter a valid password\n            </p>\n            <p v-else-if=\"!isValidConfirm\" class=\"w3-text-red\">\n              The passwords doesn't match\n            </p>\n            <p><button class=\"w3-button w3-block w3-blue\">Change</button></p>\n          </form>\n          \n        </div>\n      </div>\n      <div class=\"w3-third w3-container\"></div>\n    </div>\n  </div>\n</template>\n\n\n\n<script>\nexport default {\n  data() {\n    return {\n      password: \"\",\n      passwordConfirm: \"\",\n      isValid: true,\n      isValidConfirm: true,\n      isLoading: false,\n      error: null,\n    };\n  },\n\n  methods: {\n    async submitForm() {\n      this.validatePassword();\n      this.validatePasswordConfirm();\n      if (!this.isValid || !this.isValidConfirm) {\n        return;\n      }\n      this.isLoading = true;\n\n      // do the post\n      try {\n        await this.$store.dispatch(\"changePassword\", {\n          email: this.$route.query.email,\n          password: this.password,\n        });\n        this.isLoading = false;\n        alert(\"Your password has been reseted successfully!\");\n\n        const redirecturl = \"/login\";\n        this.$router.replace(redirecturl);\n      } catch (error) {\n        this.error = error.message || \"Failed to authenticate\";\n      }\n\n      this.isLoading = false;\n    },\n    validatePassword() {\n      this.isValid = true;\n      if (!this.password || this.password.length < 4) {\n        this.isValid = false;\n      }\n    },\n    validatePasswordConfirm() {\n      this.isValidConfirm = true;\n      if (\n        !this.passwordConfirm ||\n        this.passwordConfirm.length < 4 ||\n        this.password !== this.passwordConfirm\n      ) {\n        this.isValidConfirm = false;\n      }\n    },\n    handleError() {\n      this.error = null;\n    },\n  },\n};\n</script>\n\n\n<style scoped>\n.error {\n  border-color: red;\n}\n</style>"]}]}